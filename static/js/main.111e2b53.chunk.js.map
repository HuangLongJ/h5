{"version":3,"sources":["server.js","index.jsx","index.js"],"names":["getClientToken","a","client_key","client_secret","axios","post","grant_type","data","access_token","getTicket","get","params","ticket","calcSignature","nonce_str","timestamp","url","str","md5","getConfigParams","signature","location","window","href","String","parseInt","Date","now","useState","sdk","setSdk","ready","setReady","configStatus","setConfigStatus","resultMsg","setResultMsg","setClientKey","config","useCallback","useEffect","douyin_open","error","res","JSON","stringify","onClick","reload","className","jumpOpenAuth","redirect_uri","state","scope","response_type","success","ReactDOM","render","document","getElementById"],"mappings":"4OAMMA,EAAc,uCAAG,uCAAAC,EAAA,6DAASC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,cAArB,SACEC,IAAMC,KAAK,uBAAwB,CACxDH,aACAC,gBACAG,WAAY,sBAJO,uBACbC,EADa,EACbA,KADa,EAMIA,EAAKA,MAAQ,GAA9BC,EANa,EAMbA,aANa,kBAOdA,GAPc,2CAAH,sDAYdC,EAAS,uCAAG,qCAAAR,EAAA,6DAASO,EAAT,EAASA,aAAT,SACOJ,IAAMM,IAAI,gBAAiB,CAChDC,OAAQ,CACNH,kBAHY,uBACRD,EADQ,EACRA,KADQ,EAMGA,EAAKA,MAAQ,GAAxBK,EANQ,EAMRA,OANQ,kBAOTA,GAPS,2CAAH,sDAYTC,EAAgB,SAAC,GAA2C,IAAzCD,EAAwC,EAAxCA,OAAQE,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAC/CC,EAAG,uBAAmBL,EAAnB,sBAAuCE,EAAvC,sBAA8DC,EAA9D,gBAA+EC,GAExF,OADYE,IAAID,IAMLE,EAAe,uCAAG,yCAAAlB,EAAA,6DAASc,EAAT,EAASA,UAAWD,EAApB,EAAoBA,UAAWE,EAA/B,EAA+BA,IACtDd,EAAa,mBACG,mCAFO,SAGFF,EAAe,CAAEE,aAAYC,cADlC,qCAFO,cAGvBK,EAHuB,gBAIRC,EAAU,CAAED,iBAJJ,cAIvBI,EAJuB,iBAKLC,EAAc,CAAED,SAAQG,YAAWD,YAAWE,QALzC,eAKvBI,EALuB,yBAMtB,CAAElB,aAAYkB,cANQ,4CAAH,sDCnCpBC,EAAaC,OAAbD,SACFL,EAAMK,EAASE,KAEfR,EAAYS,OAAOC,SAASC,KAAKC,MAAQ,MAKhC,aAAO,IAAD,EACGC,mBAAS,MADZ,mBACZC,EADY,KACPC,EADO,OAEOF,oBAAS,GAFhB,mBAEZG,EAFY,KAELC,EAFK,OAGqBJ,mBAAS,IAH9B,mBAGZK,EAHY,KAGEC,EAHF,OAIeN,mBAAS,IAJxB,mBAIZO,EAJY,KAIDC,EAJC,OAKgBR,mBAAS,IALzB,mBAKZ1B,EALY,KAKAmC,EALA,KAqCbC,EAASC,sBAAW,sBAAC,gCAAAtC,EAAA,sEACekB,EAAgB,CAAEJ,YAAWD,UA1CvD,mBA0CkEE,QADvD,gBACjBd,EADiB,EACjBA,WAAYkB,EADK,EACLA,UACpBS,EAAIS,OAAO,CACT3B,OAAQ,CACNT,aACAkB,YACAL,YACAD,UAhDU,mBAiDVE,SAGJqB,EAAanC,GAXY,2CAYxB,CAAC2B,IAiBJ,OAfAW,qBAAU,WACRV,EAAOR,OAAOmB,aACVZ,IACFK,EAAgB,cAChBI,IACAT,EAAIE,OAAM,WACRC,GAAS,GACTE,EAAgB,uBAElBL,EAAIa,OAAM,SAAAC,GACRT,EAAgB,qBAAD,OAAsBU,KAAKC,UAAUF,WAGvD,CAACd,EAAKS,IAGP,oCACE,uBAAGQ,QAAS,kBAAMzB,EAAS0B,UAAUC,UAAU,QAAQ,UACvD,2BAAIf,EAAJ,KAEGF,EACC,oCACE,uBAAGe,QAjEO,WACdf,GACFF,EAAIoB,aAAa,CACftC,OAAQ,CACNT,aACAgD,aAAc7B,EAASE,KACvB4B,MAAO,GACPC,MAAO,YACPC,cAAe,QAEjBC,QAAS,gBAAG1C,EAAH,EAAGA,OAAH,OAAgBwB,EAAa,iBAAD,OAAkBxB,KACvD8B,MAAO,SAAAC,GAAG,OAAIP,EAAa,eAAD,OAAgBQ,KAAKC,UAAUF,SAsD5BK,UAAU,QAAnC,QA5EA,IA0EK,yCAOX,2BAAIb,KCrFVoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.111e2b53.chunk.js","sourcesContent":["// ⚠️注意：本文件内的逻辑请在服务端实现，本Demo只展示用\nimport axios from \"axios\";\nimport md5 from \"md5\";\n\n// 获取 ClientToken\n// 详细说明见 http://open-boe.douyin.com/platform/doc/JS-guide\nconst getClientToken = async ({ client_key, client_secret }) => {\n  const { data } = await axios.post(\"/oauth/client_token/\", {\n    client_key,\n    client_secret,\n    grant_type: \"client_credential\",\n  });\n  const { access_token } = data.data || {};\n  return access_token;\n};\n\n// 获取 Ticket\n// 详细说明见 http://open-boe.douyin.com/platform/doc/JS-guide\nconst getTicket = async ({ access_token }) => {\n  const { data } = await axios.get(\"/js/getticket\", {\n    params: {\n      access_token,\n    },\n  });\n  const { ticket } = data.data || {};\n  return ticket;\n};\n\n// 计算签名\n// 将从服务端获取到的 ticket，随机字串 noncestr，时间戳 timestamp和当前页面url，排序后进行md5加密生成签名\nconst calcSignature = ({ ticket, nonce_str, timestamp, url }) => {\n  const str = `jsapi_ticket=${ticket}&nonce_str=${nonce_str}&timestamp=${timestamp}&url=${url}`;\n  const sig = md5(str);\n  return sig;\n};\n\n// 先获取 Client Token，然后通过 Token 获取 JS Ticket\n// 详细说明见 https://open.douyin.com/platform/doc/OpenAPI-oauth2\nexport const getConfigParams = async ({ timestamp, nonce_str, url }) => {\n  const client_key = \"aw4yr4wo0vfbp1zg\"; // clientKey在你的网页应用申请通过后得到// aw4yr4wo0vfbp1zg //087819d9aac04d78cb9301dba5d47154\n  const client_secret = \"087819d9aac04d78cb9301dba5d47154\"; // clientSecret在你的网页应用申请通过后得到\n  const access_token = await getClientToken({ client_key, client_secret });\n  const ticket = await getTicket({ access_token });\n  const signature = await calcSignature({ ticket, timestamp, nonce_str, url });\n  return { client_key, signature };\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { getConfigParams } from './server';\n\nconst { location } = window;\nconst url = location.href;\n\nconst timestamp = String(parseInt(Date.now() / 1000)); // 生成签名用的时间戳\nconst nonce_str = 'Wm3WZYTPz0wzccnW'; // 生成签名用的随机字符串\nconst jsb = ''; // 自定义测试用JSB方法名\nconst params = {}; // 自定义测试用JSB方法参数\n\nexport default () => {\n  const [sdk, setSdk] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [configStatus, setConfigStatus] = useState('');\n  const [resultMsg, setResultMsg] = useState('');\n  const [client_key, setClientKey] = useState('');\n\n  // 打开原生授权页面JSB能力示例\n  const onClickAuth = () => {\n    if (ready) {\n      sdk.jumpOpenAuth({\n        params: {\n          client_key,\n          redirect_uri: location.href,\n          state: '',\n          scope: 'user_info',\n          response_type: 'code'\n        },\n        success: ({ ticket }) => setResultMsg(`Auth Success: ${ticket}`),\n        error: res => setResultMsg(`Auth Error: ${JSON.stringify(res)}`)\n      });\n    }\n  };\n\n  // 可在URL参数中自定义JSB方法名和参数以测试\n  const onClickJSB = () => {\n    if (ready) {\n      sdk[jsb]({\n        params,\n        success: res => setResultMsg(`JSB ${jsb} Success: ${JSON.stringify(res)}`),\n        error: res => setResultMsg(`JSB ${jsb} Error: ${JSON.stringify(res)}`)\n      });\n    }\n  };\n\n\n  // 使用JSB能力前，必须先通过Config验证签名\n  const config = useCallback(async () => {\n    const { client_key, signature } = await getConfigParams({ timestamp, nonce_str, url });\n    sdk.config({\n      params: {\n        client_key,\n        signature,\n        timestamp,\n        nonce_str,\n        url\n      }\n    });\n    setClientKey(client_key);\n  }, [sdk]);\n\n  useEffect(() => {\n    setSdk(window.douyin_open);\n    if (sdk) {\n      setConfigStatus('SDK Loaded');\n      config();\n      sdk.ready(() => {\n        setReady(true);\n        setConfigStatus('SDK Config Ready');\n      });\n      sdk.error(res => {\n        setConfigStatus(`SDK Config Error: ${JSON.stringify(res)}`);\n      });\n    }\n  }, [sdk, config]);\n\n  return (\n    <>\n      <p onClick={() => location.reload()} className=\"link\">{'Reload'}</p>\n      <p>{configStatus} </p>\n      {\n        !ready ? <p>Loading...</p> : (\n          <>\n            <p onClick={onClickAuth} className=\"link\">Auth</p>\n            {jsb && <p onClick={onClickJSB} className=\"link\" style={{ textTransform: 'capitalize' }}>{jsb}</p>}\n          </>\n        )\n      }\n      <p>{resultMsg}</p>\n    </>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './index.jsx';\n\nReactDOM.render(\n  <Index />,\n  document.getElementById('root')\n);"],"sourceRoot":""}